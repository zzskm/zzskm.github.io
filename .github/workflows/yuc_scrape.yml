name: yuc_scrape

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch: {}
  push:
    paths:
      - "yuc/**"
      - ".github/workflows/yuc_scrape.yml"

permissions:
  contents: write  # CSV 커밋하려면 필수

jobs:
  scrape:
    runs-on: ubuntu-latest
    concurrency:
      group: yuc-scrape
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          # requirements 파일이 있으면 캐시 키에 반영됨. 없으면 무시됨.
          cache-dependency-path: |
            requirements.txt
            yuc/requirements.txt

      # Playwright 브라우저 캐시 (브라우저 내려받은 폴더를 그냥 저장)
      - name: Cache Playwright browsers
        id: pw-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: pw-browsers-${{ runner.os }}-playwright-1.55.0-chromium
          restore-keys: |
            pw-browsers-${{ runner.os }}-playwright-1.55.

      - name: Install Python deps (incl. Playwright)
        run: |
          python -m pip install --upgrade pip
          if [ -f "yuc/requirements.txt" ]; then
            pip install -r yuc/requirements.txt
          fi
          # requirements에 playwright가 없으면 설치
          python - <<'PY'
import pkgutil, sys
sys.exit(0 if pkgutil.find_loader("playwright") else 1)
PY
          if [ $? -ne 0 ]; then
            pip install playwright
          fi

      # 캐시 미스일 때만 브라우저 다운로드 (절대 --with-deps 쓰지 마)
      - name: Install Playwright browsers (cache miss only)
        if: steps.pw-cache.outputs.cache-hit != 'true'
        run: |
          python -m playwright install chromium

      - name: Run scraper
        env:
          PLAYWRIGHT_BROWSERS_PATH: ~/.cache/ms-playwright
          PYTHONUNBUFFERED: "1"
          CI: "1"
        run: |
          python yuc/scripts/scrape.py

      - name: Commit & Push CSV
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add yuc/parking_log.csv
          git commit -m "update yuc/parking_log.csv [skip ci]" || echo "no changes"
          git push
